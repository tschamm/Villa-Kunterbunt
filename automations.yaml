
    ####################################################
    #                                                  #
    #                   AUTOMATIONS                    #
    #                                                  #
    ####################################################

- alias: homeassistant_start
  initial_state: true
  trigger:
    - platform: homeassistant
      event: start
  action:
    - service: frontend.set_theme
      data:
        name: slate
    - delay: 00:00:30
    - service: homekit.start
    - condition: state
      entity_id: light.hall
      state: 'off'
    - service: switch.turn_on
      entity_id: switch.fullykiosk_screensaver

- alias: restart_homekit
  initial_state: true
  trigger:
    platform: time
    at: '04:00:00'
  action:
  - service: homekit.start

- alias: clear_log_filesize
  initial_state: true
  trigger:
  - platform: numeric_state
    entity_id: sensor.home_assistant_log
    above: 50
  action:
  - service: shell_command.clear_logs

- alias: dator_on_update
  initial_state: true
  trigger:
    - platform: state
      entity_id: switch.dator_template
      from: 'off'
      to: 'on'
  action:
    - service: light.turn_on
      entity_id: 
        ['light.datorlampa', 'light.taklampor']
    - delay: 00:00:05
    - service: homeassistant.update_entity
      entity_id:
        ['sensor.imac_cpu_per', 'sensor.imac_mem_per', 'sensor.imac_system_ssd', 
        'sensor.imac_macintosh_hd', 'sensor.imac_time_machine', 'sensor.getvolume', 
        'sensor.macos_uptime']

    ####################################################
    #                                                  #
    #                CONDITIONAL MEDIA                 #
    #                                                  #
    ####################################################

- alias: conditional_media_playing
  initial_state: true
  trigger:
    - platform: state
      entity_id: 
        ['media_player.nest', 'media_player.kuche', 
         'media_player.bad', 'media_player.mini']
      to: playing
  action:
    - service: input_select.select_option
      data_template:
        entity_id: input_select.conditional_media
        option: "{{ trigger.to_state.name }}"

- alias: conditional_media_paused
  initial_state: true
  trigger:
    - platform: state
      entity_id: 
        ['media_player.nest', 'media_player.kuche', 
         'media_player.mini', 'media_player.mini']
      to: paused
      for:
        minutes: 1
  action:
    - service: input_select.select_option
      data_template:
        entity_id: input_select.conditional_media
        option: >-
          {% set media_players = 
            [states.media_player.nest, states.media_player.kuche, 
            states.media_player.bad, states.media_player.mini, 'sonos'] %}
          {% if media_players | selectattr('state','eq','playing') | list | count == 0 %}
            {% if media_players | selectattr('state','eq','paused') | list | count == 0 %}
            Sonos
            {% else %}
            {{ media_players | selectattr('state','eq','paused') | map(attribute='name') | max }}
            {% endif %}
          {% else %}
          {{ media_players | selectattr('state','eq','playing') | map(attribute='name') | max }}
          {% endif %}

- alias: conditional_media_idle
  initial_state: true
  trigger:
    - platform: template
      value_template: >
        {{ is_state('media_player.nest', 'off') and
        is_state('media_player.kuche', off) and
        is_state('media_player.bad', 'off') and
        is_state('media_player.mini', 'off') }}
  action:
    - service: input_select.select_option
      data_template:
        entity_id: input_select.conditional_media
        option: Sonos
